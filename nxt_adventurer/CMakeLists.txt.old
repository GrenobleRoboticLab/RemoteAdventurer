cmake_minimum_required(VERSION 2.4.6)
include($ENV{ROS_ROOT}/core/rosbuild/rosbuild.cmake)

# Set the build type.  Options are:
#  Coverage       : w/ debug symbols, w/o optimization, w/ code-coverage
#  Debug          : w/ debug symbols, w/o optimization
#  Release        : w/o debug symbols, w/ optimization
#  RelWithDebInfo : w/ debug symbols, w/ optimization
#  MinSizeRel     : w/o debug symbols, w/ optimization, stripped binaries
#set(ROS_BUILD_TYPE RelWithDebInfo)

rosbuild_init()

#set the default path for built executables to the "bin" directory
set(EXECUTABLE_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/bin)
#set the default path for built libraries to the "lib" directory
set(LIBRARY_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/lib)

# Add other components as you need them
rosbuild_include(qt_build qt-ros)
rosbuild_prepare_qt4(QtNetwork QtGui QtCore)
#find_package(Qt4 REQUIRED)
#include(${QT_USE_FILE})

# Need to pick up autogen'd ui files in build dir, so add the following
include_directories(${CMAKE_CURRENT_BINARY_DIR})

#uncomment if you have defined messages
rosbuild_genmsg()
#uncomment if you have defined services
#rosbuild_gensrv()

rosbuild_add_boost_directories()

#common commands for building c++ executables and libraries
add_library(pugixml src/pugixml/pugixml.cpp)

QT4_WRAP_CPP(RA_TCPSERVER_MOC include/nxt_adventurer/RA_TcpServer.h)
QT4_WRAP_CPP(RA_TCPCLIENT_MOC include/nxt_adventurer/RA_TcpClient.h)

rosbuild_add_library(${PROJECT_NAME} src/RA_Dashboard.cpp src/RA_Commander.cpp src/RA_Listener.cpp src/RA_TcpClient.cpp src/RA_TcpServer.cpp src/RA_XMLHelper.cpp ${RA_TCPSERVER_MOC} ${RA_TCPCLIENT_MOC})

target_link_libraries(${PROJECT_NAME} ${QT_LIBRARIES})
rosbuild_link_boost(${PROJECT_NAME} signals)

#target_link_libraries(${PROJECT_NAME} another_library)
#rosbuild_add_boost_directories()
#rosbuild_link_boost(${PROJECT_NAME} thread)
rosbuild_add_executable(lib_sample src/lib_sample.cpp)
target_link_libraries(lib_sample ${PROJECT_NAME} pugixml)

rosbuild_add_executable(sample_server src/lib_sample_server.cpp)
target_link_libraries(sample_server ${PROJECT_NAME} pugixml)

rosbuild_add_executable(sample_client src/lib_sample_client.cpp)
target_link_libraries(sample_client ${PROJECT_NAME} pugixml)
#target_link_libraries(test_qt ${QT_LIBRARIES})
